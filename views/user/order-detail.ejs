<%- include('header') %>

<style>
    /* Animations */
    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in {
        animation: fadeIn 0.5s ease forwards;
    }

    /* Card hover effects */
    .order-card {
        transition: all 0.3s ease;
        border-radius: 12px;
    }

    .order-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 24px rgba(0,0,0,0.12);
    }

    /* Status badges */
    .status-badge {
        padding: 0.5rem 1.25rem;
        border-radius: 9999px;
        font-weight: 600;
        font-size: 0.875rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-pending { 
        background-color: #FEF3C7; 
        color: #D97706;
        border: 1px solid #F59E0B;
    }
    .status-shipped { 
        background-color: #DBEAFE; 
        color: #2563EB;
        border: 1px solid #3B82F6;
    }
    .status-delivered { 
        background-color: #D1FAE5; 
        color: #059669;
        border: 1px solid #10B981;
    }
    .status-cancelled { 
        background-color: #FEE2E2; 
        color: #DC2626;
        border: 1px solid #EF4444;
    }

    /* Progress bar */
    .progress-bar {
        height: 6px;
        background: #E5E7EB;
        border-radius: 3px;
        overflow: hidden;
        margin: 1rem 0;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #10B981, #059669);
        transition: width 0.8s ease;
    }

    /* Button styles */
    .btn {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(0,0,0,0.15);
    }

    .btn:active {
        transform: translateY(0);
    }

    /* Product card */
    .product-card {
        transition: all 0.3s ease;
        border: 1px solid #E5E7EB;
        border-radius: 12px;
        overflow: hidden;
    }

    .product-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        border-color: #10B981;
    }

    /* Image hover zoom */
    .img-zoom {
        transition: transform 0.4s ease;
        overflow: hidden;
    }

    .img-zoom:hover {
        transform: scale(1.08);
    }

    /* Custom scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
    }

    ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb {
        background: #10B981;
        border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background: #059669;
    }
</style>

<div class="bg-gray-50 min-h-screen mt-48 md:mt-0 py-8">
    <div class="container mx-auto w-11/12 md:w-8/12 bg-white shadow-lg rounded-2xl p-8">
        <div class="flex-1 flex flex-col space-y-6">
            <div class="flex justify-between items-center">
                <h1 class="text-3xl font-bold text-gray-800 fade-in">Order Details</h1>
                <div class="flex gap-4">
                    <% if(order.status == 'Delivered'){ %>
                        <button class="btn bg-primary text-white py-3 px-6 rounded-xl shadow-md hover:bg-green-700 transition duration-300 flex items-center gap-2">
                            <i class="fas fa-download"></i>
                            Invoice
                        </button>
                    <% } %>
                    <% if(order.paymentMethod == 'razorpay' && order.paid == false){ %>
                        <button class="btn bg-primary text-white py-3 px-6 rounded-xl shadow-md hover:bg-green-700 transition duration-300 flex items-center gap-2">
                            <i class="fas fa-redo"></i>
                            Retry Payment
                        </button>
                    <% } %>
                </div>
            </div>

            <!-- Order Info -->
            <div class="bg-gray-50 p-6 rounded-xl">
                <h2 class="text-xl font-semibold text-gray-800">Order ID: <span class="text-primary">#<%= order._id %></span></h2>
                <p class="text-gray-600 mt-2">
                    <i class="far fa-calendar-alt mr-2"></i>
                    Placed on: <%= new Date(order.orderDate).toLocaleDateString() %>
                </p>
            </div>

            <!-- Customer Info -->
            <div class="bg-gray-50 p-6 rounded-xl">
                <h2 class="text-xl font-semibold text-gray-800 mb-6">Customer Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div class="space-y-4">
                        <div class="flex items-center gap-2">
                            <i class="fas fa-user text-primary"></i>
                            <p><strong>Name:</strong> <%= order.address.user.name %></p>
                        </div>
                        <div class="flex items-center gap-2">
                            <i class="fas fa-envelope text-primary"></i>
                            <p><strong>Email:</strong> <%= order.address.user.email %></p>
                        </div>
                        <div class="flex items-center gap-2">
                            <i class="fas fa-calendar-check text-primary"></i>
                            <p><strong>Joined:</strong> <%= new Date(order.address.user.joined_date).toLocaleDateString() %></p>
                        </div>
                    </div>
                    <div class="space-y-4">
                        <div class="flex items-center gap-2">
                            <i class="fas fa-phone text-primary"></i>
                            <p><strong>Phone:</strong> <%= order.user.phone_number %></p>
                        </div>
                        <div class="flex items-start gap-2">
                            <i class="fas fa-map-marker-alt text-primary mt-1"></i>
                            <p><strong>Shipping Address:</strong><br>
                                <%= order.address.name %>,<br>
                                <%= order.address.street %>,<br>
                                <%= order.address.city %>, <%= order.address.state %>,<br>
                                <%= order.address.zip %><br>
                                Phone: <%= order.address.phone %>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Status -->
            <div class="bg-gray-50 p-6 rounded-xl">
                <h2 class="text-xl font-semibold text-gray-800 mb-6">Order Status</h2>
                <div class="relative">
                    <div class="absolute inset-0 flex items-center">
                        <div class="w-full border-t-2 <%= order.status === 'Cancelled' ? 'border-red-500' : 'border-green-500' %>"></div>
                    </div>
                    <div class="relative flex justify-between">
                        <div class="flex flex-col items-center">
                            <span class="flex items-center justify-center w-10 h-10 bg-white border-3 rounded-full <%= order.status === 'pending' ? 'border-green-500' : order.status === 'Cancelled' ? 'border-red-500' : 'border-gray-300' %>">
                                <i class="fas fa-box"></i>
                            </span>
                            <span class="mt-2 text-sm font-medium">Pending</span>
                        </div>
                        <div class="flex flex-col items-center">
                            <span class="flex items-center justify-center w-10 h-10 bg-white border-3 rounded-full <%= order.status === 'Shipped' ? 'border-green-500' : order.status === 'Cancelled' ? 'border-red-500' : 'border-gray-300' %>">
                                <i class="fas fa-shipping-fast"></i>
                            </span>
                            <span class="mt-2 text-sm font-medium">Shipped</span>
                        </div>
                        <div class="flex flex-col items-center">
                            <span class="flex items-center justify-center w-10 h-10 bg-white border-3 rounded-full <%= order.status === 'Delivered' ? 'border-green-500' : order.status === 'Cancelled' ? 'border-red-500' : 'border-gray-300' %>">
                                <i class="fas fa-check"></i>
                            </span>
                            <span class="mt-2 text-sm font-medium">Delivered</span>
                        </div>
                    </div>
                </div>

                <% if (order.status === 'Cancelled') { %>
                    <div class="mt-6 text-center">
                        <span class="status-badge status-cancelled">
                            <i class="fas fa-times-circle"></i>
                            Order Cancelled
                        </span>
                    </div>
                <% } %>
                
                <% if (order.paymentMethod == 'razorpay' && order.paid == false) { %>
                    <div class="mt-6 text-center">
                        <span class="status-badge status-cancelled">
                            <i class="fas fa-exclamation-circle"></i>
                            Payment Failed
                        </span>
                        <p class="text-red-600 mt-2">Please retry payment</p>
                    </div>
                <% } %>
            </div>

            <!-- Items Ordered -->
            <div class="space-y-6">
                <h3 class="text-xl font-semibold text-gray-800">Order Items</h3>
                <div class="grid grid-cols-1 gap-6">
                    <% order.items.forEach(item => { %>
                        <div class="product-card p-6">
                            <div class="flex items-center gap-6">
                                <div class="img-zoom w-24 h-24">
                                    <img src="<%= item.product.images[0] %>" alt="<%= item.product.name %>" class="w-full h-full object-cover rounded-lg">
                                </div>
                                <div class="flex-grow">
                                    <h4 class="text-lg font-semibold text-gray-800"><%= item.product.name %></h4>
                                    <div class="mt-2 space-y-1">
                                        <p class="text-gray-600">Quantity: <%= item.quantity %></p>
                                        <p class="text-gray-600">Price: ₹<%= item.price.toFixed(2) %></p>
                                        <p class="text-gray-600">Payment: <%= order.paymentMethod === 'cod' ? 'Cash on Delivery' : order.paymentMethod %></p>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <p class="text-xl font-bold text-primary">₹<%= (item.price * item.quantity).toFixed(2) %></p>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>

            <!-- Total Amount -->
            <div class="bg-gray-50 p-6 rounded-xl">
                <div class="space-y-2">
                    <div class="flex justify-between">
                        <span class="text-gray-600">Subtotal:</span>
                        <span class="font-medium">₹<%= order.subtotal.toFixed(2) %></span>
                    </div>
                    <div class="flex justify-between text-red-600">
                        <span>Coupon Discount:</span>
                        <span>-₹<%= order.discount.toFixed(2) %></span>
                    </div>
                    <div class="flex justify-between text-red-600">
                        <span>Offer Discount:</span>
                        <span>-₹<%= order.offerDiscount.toFixed(2) %></span>
                    </div>
                    <div class="border-t border-gray-200 pt-2 mt-2">
                        <div class="flex justify-between">
                            <span class="text-xl font-bold">Total Amount:</span>
                            <span class="text-2xl font-bold text-primary">₹<%= order.totalAmount.toFixed(2) %></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Back Button -->
            <div class="flex justify-center mt-8">
                <a href="/account/orders" class="btn bg-primary text-white py-3 px-8 rounded-xl shadow-md hover:bg-green-700 transition duration-300 flex items-center gap-2">
                    <i class="fas fa-arrow-left"></i>
                    Back to Orders
                </a>
            </div>
        </div>
    </div>
</div>

<%- include('footer') %>


<script>
    async function downloadInvoice(orderId) {
        try {
            const response = await axios.post(`/account/orders/invoice/${orderId}`, {}, {
                responseType: 'blob'
            });
            const url = window.URL.createObjectURL(new Blob([response.data]));
            const link = document.createElement('a');
            link.href = url;
            link.setAttribute('download', `invoice_${orderId}.pdf`);
            document.body.appendChild(link);
            link.click();
            console.log("Download successful");
        } catch (error) {
            console.error("Error downloading invoice:", error);
        }
    }



    //function for retyr payment
    async function retryPayment(orderId) {
    try {
        console.debug("Initiating retryPayment for orderId:", orderId);
        axios.post('/checkout/retry-payment', { orderId })
            .then(response => {
                console.debug("Response from retry-payment API:", response);
                if (response.data.success) {
                    console.debug("Payment retry successful, preparing Razorpay options.");
                    const { razorpay_order_id, amount, currency } = response.data;


                    const options = {
                        key: "<%= process.env.RAZOR_KEY_ID %>",
                        amount: amount,
                        currency: currency,
                        name: "TOYHUB",
                        description: "Order Payment",
                        order_id: razorpay_order_id,
                        handler: async function (response) {
                            if (response.razorpay_payment_id) {
                                await Swal.fire({
                                    icon: "success",
                                    title: "Payment successful!",
                                    text: `Payment ID: ${response.razorpay_payment_id}`,
                                    showConfirmButton: true,
                                });

                                axios.post("/checkout/verify-retry-payment", {
                                    orderId,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_signature: response.razorpay_signature,
                                })
                                .then(() => {
                                    console.debug("Payment verification successful, redirecting to orders.");
                                    window.location.href = `/account/orders`;
                                })
                                .catch(error => {
                                    console.error("Error verifying payment:", error);
                                    Swal.fire({
                                        icon: "error",
                                        text: "Payment verification failed. Please contact support.",
                                        showConfirmButton: true,
                                    });
                                });
                            } else {
                                console.error("Payment failed, not proceeding to verification.");
                                Swal.fire({
                                    icon: "error",
                                    text: "Payment failed. Please try again.",
                                    showConfirmButton: true,
                                });
                            }
                        },
                        prefill: {
                            name: "<%= order.address.user.name %>",
                            email: "<%= order.address.user.email %>",
                            contact: "<%= order.address.phone %>",
                        },
                        theme: {
                            color: "#FF8C00",
                        },
                    };

                    console.debug("Opening Razorpay with options:", options);
                    const razorpay = new Razorpay(options);

                    

                    razorpay.open();
                } else {
                    console.debug("Payment retry was not successful, response data:", response.data);
                }
            })
            .catch(error => {
                console.error("Error creating Razorpay order:", error);
                Swal.fire({
                    icon: "error",
                    text: "An error occurred while processing the payment. Please try again later.",
                    showConfirmButton: true,
                });
            });
        } catch (error) {
            console.error("Error during retry payment:", error);
        }
    }
</script>