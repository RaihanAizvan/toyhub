<style>
    .active-tab{
        background-color: #19D16F;
        color:white;
        padding: 5px 14px;
        border-radius: 5px;
    }

    /* Add transitions for mobile menu */
    #mobileMenu {
        transition: all 0.3s ease-in-out;
        transform-origin: top;
        transform: scaleY(0);
        opacity: 0;
        max-height: 0;
    }

    #mobileMenu.show {
        transform: scaleY(1);
        opacity: 1;
        max-height: 500px;
    }

    /* Hamburger button animation */
    .hamburger-spin {
        transition: transform 0.3s ease-in-out;
    }

    .hamburger-spin.active {
        transform: rotate(180deg);
    }
</style>

<header class="bg-white shadow-md fixed md:relative w-full top-0 left-0 z-10">
    <div class="container mx-auto flex items-center justify-between py-3 px-4">
        <!-- Logo (Visible on all screens, replaces "All Categories" on mobile) -->
        <div class="flex items-center gap-4">
            <a href="/" class="text-xl font-bold flex-shrink-0">
                <img src="../images/logo.png" alt="ToyHub Logo" class="w-24 md:w-40 h-auto">
            </a>
        </div>
        <!-- Search Bar -->
        <div class="flex items-center flex-grow space-x-2 px-4 min-w-0">
            <select class="hidden sm:block border border-gray-300 rounded-l-lg px-3 py-2 flex-shrink-0">
                <option>All Categories</option>
                <% if (locals.categories) { %>
                    <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.name %></option>
                    <% }) %>
                <% } %>
            </select>
            <input type="text" placeholder="Search for items..."
                class="border border-gray-300 flex-grow min-w-0 px-4 py-2 rounded-lg sm:rounded-none text-sm"
                oninput="handleSearchInput(this.value)" />
            <button class="bg-green-600 text-white px-4 py-2 rounded-lg sm:rounded-r-lg flex-shrink-0">
                <i class="fas fa-search"></i>
            </button>
            <div id="suggestions" class="absolute bg-white shadow-lg rounded-md hidden"></div>
        </div>

        <!-- Desktop Navigation -->
        <div class="hidden md:flex items-center space-x-4">
            <a href="/user/login" class="text-white bg-primary hover:bg-green-700 px-4 py-2 rounded-lg transition duration-300">
                Login
            </a>
        </div>
        <button id="hamburgerButton" class="md:hidden flex items-center hamburger-spin">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16">
                </path>
            </svg>
        </button> 
    </div>
    <!-- Mobile Menu -->
    <div id="mobileMenu" class="bg-white shadow-lg md:hidden">
        <a href="/user/login" class="block px-4 py-2 hover:bg-gray-100">Login</a>
    </div>

    <nav class="w-full bg-white shadow-lg rounded-lg mt-2 text-xs md:text-lg">
        <div class="flex justify-around p-4">
            <a href="#" class="text-gray-700 hover:text-gray-900 active-tab">Home</a>
            <a href="#" class="text-gray-700 hover:text-gray-900">About Us</a>
            <a href="#" class="text-gray-700 hover:text-gray-900">Contact</a>
            <a href="#" class="text-gray-700 hover:text-gray-900">Best Seller</a>
            <a href="#" class="text-gray-700 hover:text-gray-900">Todays Deals</a>
        </div>
    </nav>
</header>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Hamburger Menu Toggle
    const hamburgerButton = document.getElementById("hamburgerButton");
    const mobileMenu = document.getElementById("mobileMenu");

    hamburgerButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("show");
        hamburgerButton.classList.toggle("active");
    });

    function handleSearchInput(value) {
        const suggestions = document.getElementById('suggestions');
        if (value.length >= 2) {
            axios.get(`/search?q=${value}`)
                .then(response => {
                    const data = response.data;
                    suggestions.innerHTML = data.map(item => `<div class="p-2 cursor-pointer hover:bg-gray-100" onclick="searchItem('${item.name}')">${item.name}</div>`).join('');
                    suggestions.classList.remove('hidden');
                })
                .catch(error => {
                    console.error('Error fetching search suggestions:', error);
                });
        } else {
            suggestions.classList.add('hidden');
        }
    }

    function searchItem(itemName) {
        const query = itemName || '';
        window.location.href = `/search/results?q=${query}`;
    }

    document.querySelector('input[type="text"]').addEventListener('keydown', function (event) {
        if (event.key === 'Enter') {
            event.preventDefault();
            const query = this.value || '';
            window.location.href = `/search/results?q=${query}`;
        }
    });
</script>