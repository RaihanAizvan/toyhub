<style>
    /* Keep all existing styles but adjust only the relevant sizing properties */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: normal;
    }

    .product-card {
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        background: #fff;
        opacity: 0;
        transform: translateY(20px);
        border-radius: 16px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    /* Keep all animations and hover effects exactly the same */
    .product-card.animate {
        animation: fadeInUp 0.6s ease forwards;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .product-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    .product-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            90deg,
            transparent,
            rgba(25, 209, 111, 0.2),
            transparent
        );
        transition: 0.6s;
        z-index: 1;
    }

    .product-card:hover::before {
        left: 100%;
    }

    .product-image-container {
        position: relative;
        overflow: hidden;
        padding-top: 100%;
        background: #f9fafb;
        border-radius: 12px;
    }

    .product-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
        padding: 0.5rem; /* Reduced from 1rem */
    }

    .product-card:hover .product-image {
        transform: scale(1.08);
    }

    .discount-badge {
        background: linear-gradient(135deg, #f43f5e, #e11d48);
        animation: pulse 2s infinite;
        box-shadow: 0 4px 6px -1px rgba(244, 63, 94, 0.3);
    }

    .product-details {
        padding: 0.75rem; /* Reduced from 1.25rem */
        background: linear-gradient(180deg, transparent, rgba(249, 250, 251, 0.8));
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .product-name {
        font-size: 1rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.25rem; /* Reduced from 0.5rem */
        transition: color 0.3s ease;
        height: 2.5rem;
        overflow: hidden;
    }

    .product-description {
        color: #6b7280;
        font-size: 0.875rem;
        margin-bottom: 0.5rem; /* Reduced from 1rem */
        height: 2.5rem;
        overflow: hidden;
    }

    .price-container {
        display: flex;
        align-items: baseline;
        gap: 0.5rem; /* Reduced from 0.75rem */
        margin-bottom: 0.5rem; /* Reduced from 1rem */
    }

    .current-price {
        font-size: 1.5rem;
        font-weight: 700;
        color: #19D16F;
    }

    .old-price {
        color: #9ca3af;
        text-decoration: line-through;
        font-size: 0.875rem;
    }

    .action-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 0.25rem; /* Reduced from 0.5rem */
        margin-top: auto;
    }

    .wishlist-btn {
        padding: 0.25rem; /* Reduced from 0.5rem */
        border-radius: 50%;
        transition: all 0.3s ease;
        background: #f3f4f6;
    }

    .wishlist-btn:hover {
        background: #fee2e2;
        transform: scale(1.1);
    }
    .add-to-cart-btn {
        color: #19D16F;
        padding: .15rem 0.75rem; /* Reduced from .25rem 1rem */
        border-radius: 12px;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: 1px solid #19D16F;
        background: transparent;
        font-weight: 600;
        font-size: 0.875rem;
        letter-spacing: 0.025em;
    }

    .add-to-cart-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 8px -1px rgba(5, 150, 105, 0.4);
    }

    .stock-warning {
        animation: blink 1.5s infinite;
        background: linear-gradient(135deg, #ef4444, #dc2626);
        box-shadow: 0 4px 6px -1px rgba(239, 68, 68, 0.3);
    }

    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }

    @keyframes blink {
        0% { opacity: 1; }
        50% { opacity: 0.6; }
        100% { opacity: 1; }
    }
</style>

<!-- Product Card Section -->
<section class="bg-gradient-to-b from-gray-50 to-white py-12">
    <div class="container mx-auto px-4">
        <h2 class="text-4xl font-bold mb-8 text-gray-900 text-center">
            <span class="bg-clip-text text-transparent bg-gradient-to-r from-black to-gray-500">
                All Products
            </span>
        </h2>
        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-6">
            <% if (locals.popularProducts) { %>
                <% popularProducts.forEach(product=> { %> 
                    <div class="product-card">
                        <a href="/product/<%= product._id %>" class="block">
                            <div class="product-image-container">
                                <% if (product.oldPrice) { %>
                                    <div class="discount-badge absolute top-3 left-3 text-white text-sm font-bold py-1 px-3 rounded-full z-10">
                                        <%= Math.round(((product.oldPrice - product.price) / product.oldPrice) * 100) %>% OFF
                                    </div>
                                <% } %>
                                <img src="<%= product.images[0] %>" alt="<%= product.name %>" class="product-image object-cover">
                                <% if (product.stock === 0) { %>
                                    <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                                        <span class="text-white font-bold text-lg">Out of Stock</span>
                                    </div>
                                <% } %>
                            </div>
                        </a>
                        <div class="product-details">
                            <a href="/product/<%= product._id %>" class="block group">
                                <h3 class="product-name group-hover:text-green-600">
                                    <%= product.name %>
                                </h3>

                                <!-- start rating -->
                                <div class="flex items-center mt-1">
                                    <% 
                                    const rating = product.averageRating || 0;
                                    const fullStars = Math.floor(rating);
                                    const hasHalfStar = rating % 1 >= 0.5;
                                    %>
                                    
                                    <% for(let i = 1; i <= 5; i++) { %>
                                        <% if (i <= fullStars) { %>
                                            <i class="fas fa-star text-yellow-400 text-sm"></i>
                                        <% } else if (i === fullStars + 1 && hasHalfStar) { %>
                                            <i class="fas fa-star-half-alt text-yellow-400 text-sm"></i>
                                        <% } else { %>
                                            <i class="far fa-star text-gray-300 text-sm"></i>
                                        <% } %>
                                    <% } %>
                                    
                                    <span class="text-xs text-gray-500 ml-1">
                                        (<%= product.ratingCount %> <%= product.ratingCount === 1 ? 'review' : 'reviews' %>)
                                    </span>
                                    
                                    <% if (product.averageRating > 0) { %>
                                        <span class="text-xs text-gray-500 ml-1">
                                            <%= product.averageRating.toFixed(1) %>
                                        </span>
                                    <% } %>
                                </div>
                                <!-- end rating -->

                                
                                <p class="product-description line-clamp-2 mt-1">
                                    <%= product.description1.length > 30 ? product.description1.slice(0, 30) + '...' : product.description1 %>
                                    <% if (product.description2) { %>
                                        <br>
                                        <%= product.description2.length > 30 ? product.description2.slice(0, 30) + '...' : product.description2 %>
                                    <% } %>
                                </p>
                                <div class="price-container mt-2">
                                    <span class="current-price">₹<%= product.priceAfterDiscount %></span>
                                    <span class="old-price">₹<%= product.price %></span>
                                </div>
                            </a>
                            <div class="action-buttons">
                                <button type="button"
                                    class="wishlist-btn <%= wishlist.includes(product._id) ? 'text-red-500' : 'text-gray-400' %>"
                                    data-product-id="<%= product._id %>"
                                    onclick="toggleWishlist(event, '<%= product._id %>')">
                                    <i class="fas fa-heart text-lg"></i>
                                </button>
                                <button type="button"
                                    class="add-to-cart-btn bg-primary"
                                    data-product-id="<%= product._id %>" 
                                    data-product-stock="<%= product.stock %>"
                                    onclick="addToCart(event, '<%= product._id %>')"
                                    <%= product.stock === 0 ? 'disabled' : '' %>>
                                    <i class="fas fa-shopping-cart text-sm hover:scale-110 transition-transform duration-300 transform"></i>
                                    <span class="ml-2 text-sm font-medium"></span>
                                    
                                </button>
                            </div>
                            <% if (product.stock < 5 && product.stock !== 0) { %>
                                <div class="stock-warning text-white text-center text-sm py-1 px-2 rounded-full mt-2">
                                    Only <%= product.stock %> left in stock!
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="col-span-full text-center py-12">
                    <p class="text-gray-500 text-lg">No products available at the moment</p>
                </div>
            <% } %>
        </div>
    </div>
</section>

<script>

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
            }
        });
    }, {
        threshold: 0.1
    });

    document.querySelectorAll('.product-card').forEach(card => {
        observer.observe(card);
    });

    function toggleWishlist(event, productId) {
        console.log('Toggle wishlist clicked');
        console.log(productId);

        const button = event.currentTarget;
        const isInWishlist = button.classList.contains('text-red-500');

        const url = isInWishlist ? `/wishlist/` : `/wishlist/₹{productId}`;
        const method = isInWishlist ? 'delete' : 'post';

        axios({
            method: method,
            url: '/account' + url,
            data: { productId: productId }
        })
            .then(response => {
                console.log('Success:', response.data);
                toastr.success(response.data.message || (isInWishlist ? 'Product removed from wishlist!' : 'Product added to wishlist!'));
                button.classList.toggle('text-red-500');
                button.classList.toggle('text-gray-400');
            })
            .catch(error => {
                console.error('Error:', error);
                toastr.error(error.response?.data?.message || 'Failed to update wishlist.');
            });
    }

    toastr.options = {
        closeButton: true,
        progressBar: true,
        positionClass: "toast-top-right",
        timeOut: 3000
    };

    function addToCart(event, productId) {
        event.preventDefault();
        event.stopPropagation();
        const productStock = event.target.getAttribute('data-product-stock');
        console.log(productStock);

        if (productStock == 0) {
            console.error('Error: Product is out of stock.');
            toastr.error('Product is out of stock and cannot be added to the cart.');
            return;
        }

        const quantity = 1;

        console.log('Product ID:', productId);

        axios.post('/cart/addProduct', {
            products: [{ productId: productId, quantity: quantity }]
        })
            .then(response => {
                console.log('Success:', response.data);
                toastr.success(response.data.message);
                if (response.data.cartItemCount !== undefined) {
                    updateCartItemCount(response.data.cartItemCount);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                toastr.error(error.response?.data?.message || 'Failed to add product to cart.');
            });
    }

    function updateCartItemCount(count) {
        const cartCountElement = document.getElementById('cart-count');
        if (cartCountElement) {
            cartCountElement.innerText = count;
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        console.log('DOM loaded');
        const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
        addToCartButtons.forEach(button => {
            button.addEventListener('click', addToCart);
        });
    });
</script>