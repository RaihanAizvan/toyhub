<style>
.line-clamp-2 {
    display: -webkit-box;
    line-clamp: 2; /* Number of lines to show */
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
}

/* Adjust card height and content alignment */
.h-80 {
    height: 20rem; /* Adjust the height as needed */
}


</style>


<!-- Product Card Section -->
<!-- Product Card Section -->
<section class="bg-white py-8">
    <div class="container mx-auto px-6">
        <h2 class="text-3xl font-semibold mb-6">All Products</h2>
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 xl:grid-cols-6 gap-5">
            <% if (locals.popularProducts) { %>
                <% popularProducts.forEach(product => { %>
                <div class="bg-white shadow-lg rounded-lg flex flex-col justify-between p-4">
                    <div class="relative">
                        <% if (product.oldPrice) { %>
                        <div class="absolute top-0 left-0 bg-orange-400 text-white text-xs font-semibold py-1 px-3 rounded-br-lg">
                            <%= Math.round(((product.oldPrice - product.price) / product.oldPrice) * 100) %>% OFF
                        </div>
                        <% } %>
                        <img src="<%= product.images[0] %>" alt="<%= product.name %>"
                            class="h-32 w-full object-contain rounded-t-lg">
                    </div>
                    <div class="mt-2">
                        <a href="/product/<%= product._id %>" class="block">
                            <h1 class="font-bold text-sm"><%= product.name %></h1>
                            <p class="text-xs text-gray-600 overflow-hidden overflow-ellipsis line-clamp-2">
                                <%= product.description1 %>
                            </p>
                            <p class="text-green-500 text-2xl font-bold mt-2">$<%= product.price %></p>
                        </a>
                        <div class="flex justify-between mt-2">
                            <button type="button" class="wishlist-btn bg-transparent border-0 <%= wishlist.includes(product._id) ? 'text-red-500' : 'text-green-500' %> hover:text-red-700 transition duration-300" data-product-id="<%= product._id %>" onclick="toggleWishlist(event, '<%= product._id %>')">
                                <i class="fas fa-heart"></i>
                            </button>
                            <button type="button" class="add-to-cart-btn text-green-500 font-bold py-1 px-4 rounded-xl flex items-center justify-center" data-product-id="<%= product._id %>" data-product-stock="<%= product.stock %>" onclick="addToCart(event, '<%= product._id %>')">
                                <i class="fas fa-shopping-cart mr-2"></i> Cart
                            </button>
                        </div>
                    </div>
                    <% if (product.stock < 5 && product.stock!=0) { %>
                    <div class="text-white bg-red-600 p-1 text-center rounded text-sm mt-2">
                        Few stocks left!
                    </div>
                    <% } %>
                <% if (product.stock === 0) { %>
                    <div class="text-white bg-red-600 p-1 text-center rounded text-sm mt-2">
                        Out of Stock
                    </div>
                <% } %>
                </div>
                <% }) %>
            <% } else { %>
            <p>No products available</p>
            <% } %>
        </div>
    </div>
</section>
<script>
    console.log('Script loaded');
    function toggleWishlist(event, productId) {
        console.log('Toggle wishlist clicked');
        console.log(productId);

        const button = event.currentTarget;
        const isInWishlist = button.classList.contains('text-red-500');

        const url = isInWishlist ? `/wishlist/` : `/wishlist/${productId}`;
        const method = isInWishlist ? 'delete' : 'post';

        axios({
            method: method,
            url: '/account' + url,
            data: { productId: productId }
        })
        .then(response => {
            console.log('Success:', response.data);
            toastr.success(response.data.message || (isInWishlist ? 'Product removed from wishlist!' : 'Product added to wishlist!'));
            button.classList.toggle('text-red-500');
            button.classList.toggle('text-green-500');
        })
        .catch(error => {
            console.error('Error:', error);
            toastr.error(error.response?.data?.message || 'Failed to update wishlist.');
        });
    }

// Initialize Toastr
toastr.options = {
    closeButton: true,
    progressBar: true,
    positionClass: "toast-top-right",
    timeOut: 3000
};

function addToCart(event, productId) {
    event.preventDefault();
    event.stopPropagation();
    const productStock = event.target.getAttribute('data-product-stock');
    console.log(productStock);

    if (productStock == 0) {
        console.error('Error: Product is out of stock.');
        toastr.error('Product is out of stock and cannot be added to the cart.');
        return;
    }

    const quantity = 1;

    console.log('Product ID:', productId);

    axios.post('/cart/addProduct', {
        productId: productId,
        quantity: quantity
    })
    .then(response => {
        console.log('Success:', response.data);
        toastr.success(response.data.message || 'Product added to cart!');
        if (response.data.cartItemCount !== undefined) {
            updateCartItemCount(response.data.cartItemCount);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        toastr.error(error.response?.data?.message || 'Failed to add product to cart.');
    });
}

function updateCartItemCount(count) {
    const cartCountElement = document.getElementById('cart-count');
    if (cartCountElement) {
        cartCountElement.innerText = count;
    }
}

// Add event listeners to all "Add to Cart" buttons
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded');
    const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
    addToCartButtons.forEach(button => {
        button.addEventListener('click', addToCart);
    });
});

</script>
