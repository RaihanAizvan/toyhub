<div class="min-h-screen flex flex-col justify-stretch">
    <div class="flex bg-gray-200">
      <!-- Sidebar -->
      <div class="w-64 bg-white p-4 hidden sm:block">
        <div class="flex items-center justify-between px-6 py-4">
          <span class="text-xl font-semibold">ToyHub</span>
        </div>
        <nav>
          <ul class="space-y-2">
            <li>
              <a href="/admin" class="flex items-center hover:bg-gray-200 transition-all p-2 text-gray-700 rounded-lg">
                Dashboard </a>
            </li>
            <li>
              <a href="/admin/products"
                class="flex items-center rounded hover:bg-gray-200 transition-all  p-2 text-gray-700">All
                Products</a>
            </li>
            <li>
              <a href="/admin/orders"
                class="flex items-center rounded hover:bg-gray-200 transition-all  p-2 text-gray-700">Order
                List</a>
            </li>
            <li>
              <a href="/admin/users" class="flex items-center  rounded p-2 text-gray-700">User List
              </a>
            </li>
            <li>
              <a href="/admin/category"
                class="flex items-center rounded hover:bg-gray-200 transition-all  p-2 text-gray-700">Category Management</a>
            </li>
            <li>
              <a href="/admin/addProduct"
                class="flex items-center rounded hover:bg-gray-200 transition-all  p-2 text-gray-700">Add
                Products</a>
            </li>
            <li> <a href="/admin/salesReport" class="flex items-center rounded bg-primary hover:bg-gray-100 hover:shadow-xl transition-all p-2 text-gray-700"><span
                class="ml-3">Sales Report </span></a>
            <li><a href="/admin/coupons" class="flex items-center rounded hover:bg-gray-200 transition-all p-2 text-gray-700">Coupons</a></li>
            <li><a href="/admin/offers" class="flex items-center rounded hover:bg-gray-200 transition-all p-2 text-gray-700">Offers</a></li>
          </ul>
        </nav>
        <div class="mt-6">
          <h3 class="text-sm font-semibold ">Categories</h3>
          <hr>
          <ul class="mt-2 space-y-2">
            <li>
              <a href="#" class="flex items-center p-2 hover:bg-gray-200 transition-all rounded text-gray-700">Category
                1</a>
            </li>
            <li>
              <a href="#" class="flex items-center p-2 hover:bg-gray-200 transition-all rounded text-gray-700">Category
                2</a>
            </li>
            <li>
              <a href="#" class="flex items-center p-2 hover:bg-gray-200 transition-all rounded  text-gray-700">Category
                3</a>
            </li>
          </ul>
          <ul>
            <li>
              <form action="/admin/logout" method="POST">
                <a href="/admin/logout">
                  <button type="submit"
                    class="flex items-center p-2 hover:bg-gray-200 mt-3 transition-all rounded  " id="logoutLink">Logout</Button>
                </a>
              </form>
            </li>
          </ul>
        </div>
      </div>
      <!-- Main Content -->
      <div class="bg-gray-100 w-screen">
        <div class="p-6">
          <!-- Breadcrumb -->
          <div class="text-sm text-gray-600 mb-4">
            <a href="/admin" class="text-gray-600 hover:text-gray-800">Home</a> > <a href="#"
              class="text-gray-600 hover:text-gray-800">Sales Report</a>
          </div>
          <!-- Header -->
          <div class="flex justify-between items-center mb-4">
            <h1 class="text-2xl font-bold text-gray-800">Sales Report</h1>
            <div class="flex space-x-4">
              <!-- Search User -->
              <div class="relative">
                <input type="text" placeholder="Search User"
                  class="bg-white border border-gray-300 rounded-lg py-2 pl-3 pr-10 focus:outline-none focus:ring-2 focus:ring-green-500">
                <button class="absolute right-2 top-2">
                  <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M21 21l-4.35-4.35M9.5 4.5a7 7 0 11-9.9 9.9 7 7 0 019.9-9.9z"></path>
                  </svg>
                </button>
              </div>
              <!-- Filter Options -->
              <div class="flex space-x-2">
                <select id="filterPeriod" class="bg-white border border-gray-300 rounded-lg py-2 px-3 focus:outline-none focus:ring-2 focus:ring-green-500">
                  <option value="all">All</option>
                  <option value="daily">Daily</option>
                  <option value="weekly">Weekly</option>
                  <option value="monthly">Monthly</option>
                  <option value="annual">Annual</option>
                  <option value="custom">Custom Date</option>
                </select>
                <input type="date" id="startDate" class="bg-white border border-gray-300 rounded-lg py-2 px-3 focus:outline-none focus:ring-2 focus:ring-green-500 hidden">
                <input type="date" id="endDate" class="bg-white border border-gray-300 rounded-lg py-2 px-3 focus:outline-none focus:ring-2 focus:ring-green-500 hidden">
                <button id="applyCustomDate" class="bg-primary text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-all hidden">
                  Apply
                </button>
              </div>
              <!-- Download Excel Button -->
              <button id="downloadPdf" class="bg-primary text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-all">
                Download PDF
              </button>
              <button id="downloadExcel" class="bg-primary text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-all">
                Download Excel
              </button>
            </div>
          </div>
          <!-- Sales Report Table -->
          <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <table class="min-w-full table-auto">
              <thead class="bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
                <tr>
                  <th class="py-3 px-6 text-left">Order ID</th>
                  <th class="py-3 px-6 text-left">Customer Name</th>
                  <th class="py-3 px-6 text-left">Order Date</th>
                  <th class="py-3 px-6 text-left">Total Amount</th>
                  <th class="py-3 px-2 text-left">Discount</th>
                  <th class="py-3 px-2 text-left">Offer Discount</th>
                  <th class="py-3 px-2 text-left">Coupon Discount</th>
                  <th class="py-3 px-2 text-left">Cutoff Amount</th>
                  <th class="py-3 px-6 text-left">Subtotal</th>
                  <th class="py-3 px-6 text-left">Payment Method</th>
                  <th class="py-3 px-6 text-left">Status</th>
                </tr>
              </thead>
              <tbody id="salesReportTableBody" class="text-gray-800 text-sm font-light">
                <% dailyOrders.forEach(order => { %> 
                  <tr class="border-b border-gray-200 hover:bg-gray-100">
                    <td class="py-4 px-6 text-left whitespace-nowrap">
                      <div class="flex items-center">
                        <span><%= order._id %></span>
                      </div>
                    </td>
                    <% const formattedDate = order.orderDate.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }); %>
                    <td class="py-3 px-6 text-center"><%= order.address.user.name %></td>
                    <td class="py-3 px-6 text-center"><%= formattedDate %></td>
                    <td class="py-3 px-6 text-center"><%= order.totalAmount %></td>
                    <td class="py-3 px-6 text-center"><%= order.discount %></td>
                    <td class="py-3 px-6 text-center"><%= order.offerDiscount %></td>
                    <td class="py-3 px-6 text-center"><%= order.couponDiscount %></td>
                    <td class="py-3 px-6 text-center"><%= order.cutoffAmount %></td>
                    <td class="py-3 px-6 text-center"><%= order.subtotal %></td>
                    <td class="py-3 px-6 text-center"><%= order.paymentMethod %></td>
                    <td class="py-3 px-6 text-center">
                      <span class="<%= order.status === 'pending' ? 'text-yellow-500' : order.status === 'completed' ? 'text-green-500' : 'text-red-500' %>">
                        <%= order.status %>
                      </span>
                    </td>
                  </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
          <!-- Pagination -->
          <div class="mt-4 flex justify-between items-center">
            <div class="flex space-x-1">
              <% for (let i = 1; i <= locals.totalPages; i++) { %>
                <a href="/admin/salesReport?page=<%= i %>&limit=10" 
                   class="px-3 py-1 text-sm text-gray-700 bg-white border border-gray-300 rounded-lg <%= currentPage === i ? 'bg-gray-300' : '' %>">
                  <%= i %>
                </a>
              <% } %>
            </div>
            <% if (locals.currentPage < locals.totalPages) { %>
              <a href="/admin/salesReport?page=<%= locals.currentPage + 1 %>&limit=10" class="px-3 py-1 text-sm text-gray-700 bg-white border border-gray-300 rounded-lg">Next</a>
            <% } %>
          </div>
        </div>
      </div>
  
      <!-- footer -->
    </div>
    <footer class="flex items-center justify-between text-xs px-6 py-4 bg-white border-t mt-6">
      <div class="text-gray-700">Â© 2024 ToyHub. All rights reserved.</div>
      <div class="flex items-center space-x-4">
        <a href="#" class="text-gray-700">Privacy Policy</a>
        <a href="#" class="text-gray-700">Terms of Service</a>
      </div>
    </footer>
  </div>
  <!-- modal for logout confirmation -->
  <div id="logoutModal" class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50 hidden">
    <div class="bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div
            class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
            <svg class="h-6 w-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </div>
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title"> Logout Confirmation </h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500"> Are you sure you want to logout? All of your unsaved changes will be lost.
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button id="confirmLogout"
          class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">
          Logout </button>
        <button id="cancelLogout"
          class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm">
          Cancel </button>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const filterPeriod = document.getElementById('filterPeriod');
      const startDateInput = document.getElementById('startDate');
      const endDateInput = document.getElementById('endDate');
      const applyCustomDateBtn = document.getElementById('applyCustomDate');
      const downloadExcelButton = document.getElementById('downloadExcel');
      const downloadPdfButton = document.getElementById('downloadPdf');
      const salesReportTableBody = document.getElementById('salesReportTableBody');
  
      const orders = {
        all: <%- JSON.stringify(allOrders) %>,
        daily: <%- JSON.stringify(dailyOrders) %>,
        weekly: <%- JSON.stringify(weeklyOrders) %>,
        monthly: <%- JSON.stringify(monthlyOrders) %>,
        annual: <%- JSON.stringify(annualOrders) %>
      };
  
      function renderOrders(orders) {
        salesReportTableBody.innerHTML = '';
        if (!Array.isArray(orders)) {
          console.error('Orders is not an array:', orders);
          return;
        }
        orders.forEach(order => {
          if (!order || !order.orderDate) {
            console.error('Invalid order:', order);
            return;
          }
          const formattedDate = new Date(order.orderDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
          const row = `
            <tr class="border-b border-gray-200 hover:bg-gray-100">
              <td class="py-4 px-6 text-left whitespace-nowrap">
                <div class="flex items-center">
                  <span>${order._id}</span>
                </div>
              </td>
              <td class="py-3 px-6 text-center">${order.address?.user?.name || 'N/A'}</td>
              <td class="py-3 px-6 text-center">${formattedDate}</td>
              <td class="py-3 px-6 text-center">${order.totalAmount || 0}</td>
              <td class="py-3 px-6 text-center">${order.discount || 0}</td>
              <td class="py-3 px-6 text-center">${order.offerDiscount || 0}</td>
              <td class="py-3 px-6 text-center">${order.couponDiscount || 0}</td>
              <td class="py-3 px-6 text-center">${order.cutoffAmount || 0}</td>
              <td class="py-3 px-6 text-center">${order.subtotal || 0}</td>
              <td class="py-3 px-6 text-center">${order.paymentMethod || 'N/A'}</td>
              <td class="py-3 px-6 text-center">
                <span class="${order.status === 'pending' ? 'text-yellow-500' : order.status === 'completed' ? 'text-green-500' : 'text-red-500'}">
                  ${order.status || 'N/A'}
                </span>
              </td>
            </tr>
          `;
          salesReportTableBody.insertAdjacentHTML('beforeend', row);
        });
      }
  
      filterPeriod.addEventListener('change', function() {
        if (filterPeriod.value === 'custom') {
          startDateInput.classList.remove('hidden');
          endDateInput.classList.remove('hidden');
          applyCustomDateBtn.classList.remove('hidden');
        } else {
          startDateInput.classList.add('hidden');
          endDateInput.classList.add('hidden');
          applyCustomDateBtn.classList.add('hidden');
          if (orders[filterPeriod.value]) {
            renderOrders(orders[filterPeriod.value]);
          } else {
            console.error('Invalid filter period:', filterPeriod.value);
          }
        }
      });

      applyCustomDateBtn.addEventListener('click', function() {
        const startDate = new Date(startDateInput.value);
        const endDate = new Date(endDateInput.value);
        
        if (!startDate || !endDate || isNaN(startDate) || isNaN(endDate)) {
          alert('Please select valid start and end dates');
          return;
        }
        
        if (endDate < startDate) {
          alert('End date must be after start date');
          return;
        }
        
        // Set time to start of day for start date and end of day for end date
        startDate.setHours(0, 0, 0, 0);
        endDate.setHours(23, 59, 59, 999);
        
        // Filter orders between start and end dates
        const filteredOrders = orders.all.filter(order => {
          if (!order || !order.orderDate) return false;
          const orderDate = new Date(order.orderDate);
          return orderDate >= startDate && orderDate <= endDate;
        });
        
        renderOrders(filteredOrders);
      });
  
      downloadExcelButton.addEventListener('click', function() {
        const period = filterPeriod.value;
        if (period === 'custom') {
          if (!startDateInput.value || !endDateInput.value) {
            alert('Please select both start and end dates');
            return;
          }
          window.location.href = `/admin/salesReport/export?period=${period}&startDate=${startDateInput.value}&endDate=${endDateInput.value}`;
        } else {
          window.location.href = `/admin/salesReport/export?period=${period}`;
        }
      });
  
      downloadPdfButton.addEventListener('click', function() {
        const period = filterPeriod.value;
        if (period === 'custom') {
          if (!startDateInput.value || !endDateInput.value) {
            alert('Please select both start and end dates');
            return;
          }
          
          const formattedStartDate = new Date(startDateInput.value).toISOString().split('T')[0];
          const formattedEndDate = new Date(endDateInput.value).toISOString().split('T')[0];
          
          window.location.href = `/admin/salesReport/export-pdf?period=${period}&startDate=${formattedStartDate}&endDate=${formattedEndDate}`;
        } else {
          window.location.href = `/admin/salesReport/export-pdf?period=${period}`;
        }
      });

      // Set initial filter value to "all" and render all orders
      filterPeriod.value = "all";
      if (orders.all) {
        renderOrders(orders.all);
      }
    });
  </script>
